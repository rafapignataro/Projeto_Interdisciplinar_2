<!DOCTYPE html>

<html lang="pt-br" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans" rel="stylesheet">
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="/public/quill/assets/snow.css">
    <script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css">
    <link rel="stylesheet" type="text/css" href="/public/CSS/indexCss.css">
	<link rel="stylesheet" type="text/css" href="/public/CSS/project.css">


	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>

    <link rel="stylesheet" href="/Public/upvotejs/dist/upvotejs/upvotejs.css">
    <script src="/Public/upvotejs/dist/upvotejs/upvotejs.vanilla.js"></script>



	<title><%= title %></title>
</head>
<body>
<div class="header-wrapper nav-down">
            <div class="header">
                <div class="header-container">
                    <div class="header-left">
                        <div class="header-logos-wrapper">
                            <div class="header-logos">
                                <a href="/">
                                    <img src="../../Public/Imagens/CurseIcon.svg" class="header-logos-curse" draggable="false"/></a>
                            </div>
                        </div>
                    </div>
                    <div class="header-center">
                        <div class="project-info">
		                    <h2><%= result.title %></h2>
		                    <div class="about-projeto" id="about">
                                <p>criado por</p>
			                    <p class="about-user"><a href="/"><%= result.user %></a></p>
                                <p>em</p>
			                    <p class="about-date"><%= result.date %></p>
		                    </div>
	                    </div>
                    </div>
                    <div class="header-right">
                    </div>
                </div>
            </div>
</div>
    <!------------------------------------------------------------------------------------------------------------------------->
<div class="content-wrapper">
<div class="content">
    <div class="editor-header">
        <div class="file-tabs">
            <!--MAXIMO 4 TABS ABERTAS POR VEZ, SE MAIS UMA FOR ABERTA, A PRIMEIRA ï¿½ FECHADA-->

            <div class="file-tab-container">
                <input type="radio" class="file-radio" name="file" checked/>
                <div class="file-tab">
                    <span>projeto.ejs</span>
                    <button type="button" class="fa fa-close close-tab"></button>
                </div>
            </div>
            <div class="file-tab-container">
                <input type="radio" class="file-radio" name="file"/>
                <div class="file-tab">
                    <span>projetoCss.css</span>
                    <button type="button" class="fa fa-close close-tab"></button>
                </div>
            </div>
                                <div class="file-tab-container">
                <input type="radio" class="file-radio" name="file"/>
                <div class="file-tab">
                    <span>projeto.ejs</span>
                    <button type="button" class="fa fa-close close-tab"></button>
                </div>
            </div>
            <div class="file-tab-container">
                <input type="radio" class="file-radio" name="file"/>
                <div class="file-tab">
                    <span>projetoLayoutIndex.html</span>
                    <button type="button" class="fa fa-close close-tab"></button>
                </div>
            </div>
        </div>
    </div>
    <div class="editor">
        <div class="editor-options">

        </div>
        <div class="container-wrapper">
            <div class="container-spacer"></div>
            <div id="container"></div>
        </div>
        <div class="file-tree">
        </div>
    </div>
    <div class ="editor-footer">
        <div class="project-desc-container">
            <input type="checkbox" id="project-desc-dropdown-check" class="project-desc-dropdown-check">
            <div class="project-desc-title">
                <p>Description</p>
            </div>
            <div class="project-desc-dropdown-content">
                <div class="project-desc-content ql-snow ql-container">
                    <div class="ql-editor">
                        <%- result.description %>
                    </div>
                </div>
            </div>
            <span class="fa fa-chevron-down"></span>
        </div>

        <div class="informacoes-container">
            <div class="informacoes">
                <div id="form-container" class="container">
                  <form id="form-resposta">
                      <div id="editor-container">
                      </div>
                      <input type="submit" class="submit-answer" value="Responder"/>
                      <!-- FAZER O POST DO CONTEUDO DA RESPOSTA -->
                  </form>
                </div>
            </div>
        </div>
    </div>

    <div class="comments-container">
      <!-- RESPOSTAS -->
    </div>
  </div>
</div>
    <!-- SCRIPTS------------------------------------------------------------------------------------------------->

    <script>
        var quill = new Quill('#editor-container', {
          modules: {
            toolbar: [
              ['bold', 'italic', 'underline'],
              ['code-block'],
              [{ 'list': 'ordered' }, { 'list': 'bullet' }],
              [{ 'indent': '-1'}, { 'indent': '+1' }],
            ]
          },
          placeholder: '',
          theme: 'snow'
        });
    </script>

    <script>
    $(document).load(function () {
     Upvote.create('basic');
    });
    </script>

    <script src="../../Public/monaco/min/vs/loader.js"></script>
    <script>
	    require.config({ paths: { 'vs': '../../Public/monaco/min/vs' }});
        require(['vs/editor/editor.main'], function () {
            var originalModel = monaco.editor.createModel(
                "var express = require('express')();\n "+
"var http = require('http').Server(express);                                                                                                                                        \n "+
"var request = require('request');                                                                                                                                                  \n "+
"																																													\n	 "+
"	var io = require('socket.io')(http);                                                                                                                                            \n    "+
"	var fs = require('fs');                                                                                                                                                         \n    "+
"	var xml = require('xml2js');                                                                                                                                                    \n    "+
"																																													\n	 "+
"	var parser = new xml.Parser();                                                                                                                                                  \n    "+
"																																													\n	 "+
"	express.get('/', function(req, res){                                                                                                                                            \n    "+
"		res.send('Dedicated server of Turn Network running!');                                                                                                                      \n    "+
"	});                                                                                                                                                                             \n    "+
"																																													\n	 "+
"	var tMusic;                                                                                                                                                                     \n    "+
"	var aTurn = {                                                                                                                                                                   \n    "+
"		url: {                                                                                                                                                                      \n    "+
"			history: '../../../Playlist/pgm/Montagem/MusicHistory.xml',                                                                                                             \n    "+
"			current: '../../../Playlist/pgm/current.xml'                                                                                                                            \n    "+
"		},                                                                                                                                                                          \n    "+
"		startServer: function(){                                                                                                                                                    \n    "+
"			aTurn.readData();                                                                                                                                                       \n    "+
"																																													\n	 "+
"			setTimeout(function(){                                                                                                                                                  \n    "+
"				aTurn.updateData();                                                                                                                                                 \n    "+
"			}, 3000);                                                                                                                                                               \n    "+
"		},                                                                                                                                                                          \n    "+
"		readData: function(){                                                                                                                                                       \n    "+
"			fs.readFile(aTurn.url.history, function(err, data){                                                                                                                     \n    "+
"				parser.parseString(data, function(err, result){                                                                                                                     \n    "+
"					tMusic = result['MusicHistory']['Item0'][0].$.Music;                                                                                                            \n    "+
"				});                                                                                                                                                                 \n    "+
"			});                                                                                                                                                                     \n    "+
"			setTimeout(function(){                                                                                                                                                  \n    "+
"				aTurn.readData();                                                                                                                                                   \n    "+
"			}, 1000);                                                                                                                                                               \n    "+
"		},                                                                                                                                                                          \n    "+
"		updateData: function(){                                                                                                                                                     \n    "+
"			fs.readFile(aTurn.url.history, function(err, data){                                                                                                                     \n    "+
"				parser.parseString(data, function(err, result){                                                                                                                     \n    "+
"					var current = result['MusicHistory']['Item0'][0].$.Music;                                                                                                       \n    "+
"					var split = current.split(' - ');                                                                                                                               \n    "+
"																																													\n	 "+
"					if(tMusic === current){                                                                                                                                         \n    "+
"					}                                                                                                                                                               \n    "+
"					else if(tMusic == undefined || tMusic.length <= 0){                                                                                                             \n    "+
"						aTurn.emitData();                                                                                                                                           \n    "+
"					}                                                                                                                                                               \n    "+
"					else{                                                                                                                                                           \n    "+
"						aTurn.emitData();                                                                                                                                           \n    "+
"					}                                                                                                                                                               \n    "+
"				});                                                                                                                                                                 \n    "+
"			});                                                                                                                                                                     \n    "+
"			setTimeout(function(){                                                                                                                                                  \n    "+
"				aTurn.updateData();                                                                                                                                                 \n    "+
"			}, 1000);                                                                                                                                                               \n    "+
"		},                                                                                                                                                                          \n    "+
"		emitData: function(){                                                                                                                                                       \n    "+
"			function album(music){                                                                                                                                                  \n    "+
"				return new Promise(function(resolve, reject){                                                                                                                       \n    "+
"					request('http://source.localhost/provider/saveArt/'+music+'', function (error, response, result){                                                               \n    "+
"						data = JSON.parse(result);                                                                                                                                  \n    "+
"						resolve(data['returnAlbum']);                                                                                                                               \n    "+
"					});                                                                                                                                                             \n    "+
"				});                                                                                                                                                                 \n    "+
"			}                                                                                                                                                                       \n    "+
"			fs.readFile(aTurn.url.current, function(err, data){                                                                                                                     \n    "+
"				parser.parseString(data, function(err, result){                                                                                                                     \n    "+
"					var music = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Artist'] + ' - ' + result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Title'];   \n    "+
"					var music = music.toString();                                                                                                                                   \n    "+
"																																													\n	 "+
"					var startTime = result['Playlist']['OnAir'][0]['CurIns'][0]['StartedTime'];                                                                                     \n    "+
"					var startTime = startTime.toString().split(' ');                                                                                                                \n    "+
"																																													\n	 "+
"					var endTime = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0].$.SchedTime;                                                                            \n    "+
"					var endTime = endTime.split(' ');                                                                                                                               \n    "+
"																																													\n	 "+
"					var nextArtist = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Artist'];                                                                           \n    "+
"					var nextMusic = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Title'];                                                                             \n    "+
"																																													\n	 "+
"					album(music).then(function(nextAlbum){                                                                                                                          \n    "+
"						io.emit('updateNext', {                                                                                                                                     \n    "+
"							'nextArtist': nextArtist.toString(),                                                                                                                    \n    "+
"							'nextMusic': nextMusic.toString(),                                                                                                                      \n    "+
"							'nextAlbum': nextAlbum                                                                                                                                  \n    "+
"						});                                                                                                                                                         \n    "+
"					});                                                                                                                                                             \n    "+
"					io.emit('updateTime', {                                                                                                                                         \n    "+
"						'startTime': startTime[1],                                                                                                                                  \n    "+
"						'endTime': endTime[1],                                                                                                                                      \n    "+
"						'maxTime': ''                                                                                                                                               \n    "+
"					});                                                                                                                                                             \n    "+
"				});                                                                                                                                                                 \n    "+
"			});                                                                                                                                                                     \n    "+
"		}                                                                                                                                                                           \n    "+
"	}                                                                                                                                                                               \n    "+
"																																													\n	 "+
"	io.on('connection', function(socket){                                                                                                                                           \n    "+
"		aTurn.emitData();                                                                                                                                                           \n    "+
"	});                                                                                                                                                                             \n    "+
"																																													\n	 "+
"	http.listen(3000, function(){                                                                                                                                                   \n    "+
"		console.log('Client server running on port 3000!');                                                                                                                         \n    "+
"	});                                                                                                                                                                             \n    "+
"																																													\n	 "+
"aTurn.startServer();                                                                                                                                                               \n "
                , "javascript");

            var modifiedModel = monaco.editor.createModel(
                "var express = require('express')();                                                                                                                                                        \n"+
"var http = require('http').Server(express);                                                                                                                                                \n"+
"var request = require('request');                                                                                                                                                          \n"+
"                                                                                                                                                                                           \n"+
"var io = require('socket.io')(http);                                                                                                                                                       \n"+
"var fs = require('fs');                                                                                                                                                                    \n"+
"var xml = require('xml2js');                                                                                                                                                               \n"+
"                                                                                                                                                                                           \n"+
"var parser = new xml.Parser();                                                                                                                                                             \n"+
"                                                                                                                                                                                           \n"+
"express.get('/', function(req, res){                                                                                                                                                       \n"+
"    res.send('Dedicated server of Turn Network running!');                                                                                                                                 \n"+
"});                                                                                                                                                                                        \n"+
"                                                                                                                                                                                           \n"+
"var tMusic;                                                                                                                                                                                \n"+
"var aTurn = {                                                                                                                                                                              \n"+
"    url: {                                                                                                                                                                                 \n"+
"        history: '../../../Playlist\pgm\Montagem\MusicHistory.xml',                                                                                                                        \n"+
"        current: '../../../Playlist\pgm\current.xml'                                                                                                                                       \n"+
"    },                                                                                                                                                                                     \n"+
"    startServer: function(){                                                                                                                                                               \n"+
"        aTurn.watchData(function(result) {                                                                                                                                                 \n"+
"            aTurn.updateData(result);                                                                                                                                                      \n"+
"        });                                                                                                                                                                                \n"+
"    },                                                                                                                                                                                     \n"+
"    watchData: function(callback) {                                                                                                                                                        \n"+
"        fs.watchFile(aTurn.url.history, function () {                                                                                                                                      \n"+
"            fs.readFile(aTurn.url.history, function(err, data){                                                                                                                            \n"+
"                parser.parseString(data, function(err, result){                                                                                                                            \n"+
"                    tMusic = result['MusicHistory']['Item0'][0].$.Music;                                                                                                                   \n"+
"                                                                                                                                                                                           \n"+
"                    if (callback)                                                                                                                                                          \n"+
"                        callback(result);                                                                                                                                                  \n"+
"                });                                                                                                                                                                        \n"+
"            });                                                                                                                                                                            \n"+
"        });                                                                                                                                                                                \n"+
"    },                                                                                                                                                                                     \n"+
"    updateData: function() {                                                                                                                                                               \n"+
"        aTurn.emitData();                                                                                                                                                                  \n"+
"    },                                                                                                                                                                                     \n"+
"    emitData: function(){                                                                                                                                                                  \n"+
"        function album(music){                                                                                                                                                             \n"+
"            return new Promise(function(resolve, reject){                                                                                                                                  \n"+
"                request('http://source.localhost\provider\saveArt/' + music, function (error, response, result){                                                                           \n"+
"                    var data = JSON.parse(result);                                                                                                                                         \n"+
"                    resolve(data['returnAlbum']);                                                                                                                                          \n"+
"                });                                                                                                                                                                        \n"+
"            });                                                                                                                                                                            \n"+
"        }                                                                                                                                                                                  \n"+
"                                                                                                                                                                                           \n"+
"        fs.readFile(aTurn.url.current, function(err, data){                                                                                                                                \n"+
"            parser.parseString(data, function(err, result){                                                                                                                                \n"+
"                var music = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Artist'] + ' - ' + result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Title'];              \n"+
"                                                                                                                                                                                           \n"+
"                var startTime = result['Playlist']['OnAir'][0]['CurIns'][0]['StartedTime'];                                                                                                \n"+
"                var startTime = startTime.toString().split(' ');                                                                                                                           \n"+
"                                                                                                                                                                                           \n"+
"                var endTime = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0].$.SchedTime;                                                                                       \n"+
"                var endTime = endTime.split(' ');                                                                                                                                          \n"+
"                                                                                                                                                                                           \n"+
"                var nextArtist = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Artist'];                                                                                      \n"+
"                var nextMusic = result['Playlist']['Next'][0]['NextMusic'][0]['Music'][0]['Title'];                                                                                        \n"+
"                                                                                                                                                                                           \n"+
"                album(music).then(function(nextAlbum){                                                                                                                                     \n"+
"                    io.emit('updateNext', {                                                                                                                                                \n"+
"                        'nextArtist': nextArtist.toString(),                                                                                                                               \n"+
"                        'nextMusic': nextMusic.toString(),                                                                                                                                 \n"+
"                        'nextAlbum': nextAlbum                                                                                                                                             \n"+
"                    });                                                                                                                                                                    \n"+
"                });                                                                                                                                                                        \n"+
"                                                                                                                                                                                           \n"+
"                io.emit('updateTime', {                                                                                                                                                    \n"+
"                    'startTime': startTime[1],                                                                                                                                             \n"+
"                    'endTime': endTime[1],                                                                                                                                                 \n"+
"                    'maxTime': ''                                                                                                                                                          \n"+
"                });                                                                                                                                                                        \n"+
"            });                                                                                                                                                                            \n"+
"        });                                                                                                                                                                                \n"+
"    }                                                                                                                                                                                      \n"+
"}                                                                                                                                                                                          \n"+
"                                                                                                                                                                                           \n"+
"io.on('connection', function(socket) {                                                                                                                                                     \n"+
"    aTurn.emitData();                                                                                                                                                                      \n"+
"});                                                                                                                                                                                        \n"+
"                                                                                                                                                                                           \n"+
"http.listen(3000, function(){                                                                                                                                                              \n"+
"    console.log('Client server running on port 3000!');                                                                                                                                    \n"+
"});                                                                                                                                                                                        \n"+
"                                                                                                                                                                                           \n"+
"aTurn.startServer();                                                                                                                                                                       \n"
                , "javascript");
		    var editor = monaco.editor.createDiffEditor(document.getElementById('container'), {
                language: 'javascript',
                theme: "vs-dark",
                automaticLayout: true,
                scrollbar: {
                    verticalHasArrows: true,
                    horizontalHasArrows: true,
                    vertical: 'visible',
                    horizontal: 'visible',
                    verticalScrollbarSize: 17,
                    horizontalScrollbarSize: 17,
                    arrowSize: 30
                }
            });
            editor.setModel({
                original: originalModel,
                modified: modifiedModel
            });
	    });
    </script>

    <script>
        var Editor = document.querySelector("#editor-container");
        var html;
        var $submitanswer = $(".submit-answer");
        $submitanswer.on("click", function () {
            html = Editor.children[0].innerHTML;
            var data = {
              content: html,
              projectId: <%= result.id_pergunta %>,
              userId: <%= user %>,
            };
            $.ajax({
                url: "/postResposta",
                type: "POST",
                dataType: "json",
                data: data,
                cache: false,
                success: (data) => {
                    alert("resposta postada");
                    window.location.reload();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.log('error ' + textStatus + " " + errorThrown);
                }
            });
        });

        const limit = 30000;

        quill.on('text-change', function (delta, old, source) {
          if (quill.getLength() > limit) {
            quill.deleteText(limit, quill.getLength());
          }
        });

        var commentContainer = $(".comments-container");

        var id_pergunta = <%= result.id_pergunta %>;
        $.ajax({
            url: "/getRespostas/" + id_pergunta,
            type: "GET",
            cache: false,
            success: (data) => {
                console.log(data);
                for(var i=0; i < data.length; i++) {
                    commentContainer.append(
                      '<div class="comment-layout">' +
                        '<div class="comment-left">' +
                          '<a href="/Profile/' + data[i].login_usuario + '" class="comment-profile-picture" id="btnPerfil"><img class="user-photo" src="/Public/Users/' + data[i].login_usuario + '/user-photo.jpg" style="border-radius: 50%"></a>' +
                          '<div id="basic" class="upvotejs">'+
                            '<a class="upvote"></a>'+
                            '<span class="count">0</span>'+
                            '<a class="downvote"></a>'+
                            '<a class="star"></a>'+
                          '</div>'+
                        '</div>'+
                        '<div class="comment-right ql-container ql-snow">'+
                          '<div class="comment-footer">'+
                            '<div class="comment-info">'+
                              '<div class="about-resposta" id="about-answer">'+
              			             '<p class="about-user-resposta"><a href="/Profile/' + data[i].login_usuario + '">' + data[i].login_usuario + '</a></p>'+
              			             '<p class="about-date-resposta">' + data[i].date + '</p>'+
              		            '</div>'+
                            '</div>'+
                          '</div>'+
                          '<div class="ql-editor comment-right-comp">'+
                            data[i].text_resposta +
                          '</div>'+
                        '</div>'+
                      '</div>'
                    );
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log('error ' + textStatus + " " + errorThrown);
            }
        });
    </script>
</body>
</html>
